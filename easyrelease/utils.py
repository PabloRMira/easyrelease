# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/04_utils.ipynb (unless otherwise specified).

__all__ = ['check_git_dir', 'check_project_root', 'read_credentials', 'get_config', 'get_template', 'update_gitignore']

# Cell
import os
import functools
import tempfile
import pkgutil
from configparser import ConfigParser

# Cell
def check_git_dir():
    "Check whether there is a .git directory in your current folder"
    return bool(os.path.exists(".git"))

# Cell
def check_project_root(func):
    """Check that the user is on the project root directory by checking if there is a .git folder
    before running `func`
    """
    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if not check_git_dir:
            raise Exception("You need to be on your project root to execute this command")
        else:
            return func(*args, **kwargs)
    return wrapper

# Cell
@check_project_root
def read_credentials(path):
    "Read credentials from `path`"
    config = ConfigParser(delimiters=['='])
    with open(path, "r") as f:
        config.read_string("[DEFAULT]\n" + f.read())
    return config["DEFAULT"]

# Cell
def get_config():
    "Get config from settings.ini"
    config = ConfigParser(delimiters=['='])
    config.read('settings.ini')
    cfg = config['DEFAULT']
    return cfg

# Cell
def get_template(name):
    "Get template with filename `name`"
    template = pkgutil.get_data(__name__, f"templates/{name}").decode("utf-8")
    return template

# Cell
@check_project_root
def update_gitignore():
    "Update .gitignore with stuff we do not want to track"
    add_ignore_files = [
        ".gh-credentials"
    ]
    if os.path.exists(".gitignore"):
        with open(".gitignore", "r") as f:
            ignore_files = f.read().split("\n")
        for ifile in add_ignore_files:
            if ifile not in ignore_files:
                ignore_files.append(ifile)
        ignore_file = "\n".join(ignore_files)
    else:
        ignore_file = "\n"
    with open(".gitignore", "w") as f:
        f.write(ignore_file)